// <auto-generated />
using Expenses.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Expenses.Model.Migrations
{
    [DbContext(typeof(ExpensesContext))]
    [Migration("20210912160213_BrandFormat")]
    partial class BrandFormat
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "5.0.9");

            modelBuilder.Entity("BrandFormat", b =>
                {
                    b.Property<int>("BrandListId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("FormatListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BrandListId", "FormatListId");

                    b.HasIndex("FormatListId");

                    b.ToTable("BrandFormat");
                });

            modelBuilder.Entity("BrandProduct", b =>
                {
                    b.Property<int>("BrandListId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ProductListId")
                        .HasColumnType("INTEGER");

                    b.HasKey("BrandListId", "ProductListId");

                    b.HasIndex("ProductListId");

                    b.ToTable("BrandProduct");
                });

            modelBuilder.Entity("Expenses.Core.Entities.Brand", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Brand");
                });

            modelBuilder.Entity("Expenses.Core.Entities.Format", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Format");
                });

            modelBuilder.Entity("Expenses.Core.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Product");
                });

            modelBuilder.Entity("Expenses.Core.Entities.Store", b =>
                {
                    b.Property<int>("StoreId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Logo")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("TEXT");

                    b.HasKey("StoreId");

                    b.ToTable("Store");
                });

            modelBuilder.Entity("BrandFormat", b =>
                {
                    b.HasOne("Expenses.Core.Entities.Brand", null)
                        .WithMany()
                        .HasForeignKey("BrandListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Expenses.Core.Entities.Format", null)
                        .WithMany()
                        .HasForeignKey("FormatListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BrandProduct", b =>
                {
                    b.HasOne("Expenses.Core.Entities.Brand", null)
                        .WithMany()
                        .HasForeignKey("BrandListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Expenses.Core.Entities.Product", null)
                        .WithMany()
                        .HasForeignKey("ProductListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
